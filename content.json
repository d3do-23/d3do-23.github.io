{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/08/06/hello-world/"},{"title":"内网穿透小实验","text":"使用 frp（Fast Reverse Proxy）来搭建内网穿透是一个更加现实和实用的方案。frp 是一个高性能的反向代理应用，可以帮助轻松实现内网穿透，允许在内网部署的服务通过公网访问。 实验概述： frp服务器：部署在可以公网访问的机器上（本地机器或跳板机）。 frp客户端：部署在需要访问的内网机器上（Docker容器中）。 Docker容器：模拟其他内网环境（三台）。 步骤1：下载和配置frp 下载frp：从 frp GitHub页面 下载适合操作系统的frp版本。 配置frp服务器（frps.ini）： bind_port &#x3D; 7000 这是frp服务器的基本配置，监听端口7000。 配置frp客户端（frpc.ini）： server_addr &#x3D; [frp服务器的IP地址] server_port &#x3D; 7000 [ssh] type &#x3D; tcp local_ip &#x3D; 127.0.0.1 local_port &#x3D; 22 remote_port &#x3D; 6000 这个配置将本地的SSH端口（22）映射到远程服务器的6000端口。可以根据需要修改这个配置。 步骤2：在Docker中运行frp客户端创建一个Dockerfile来运行frp客户端： # Dockerfile for frp client FROM alpine:latest # 下载frp客户端 ADD https:&#x2F;&#x2F;github.com&#x2F;fatedier&#x2F;frp&#x2F;releases&#x2F;download&#x2F;[版本]&#x2F;frp_[版本]_linux_amd64.tar.gz &#x2F;frp.tar.gz # 解压 RUN tar -zxvf &#x2F;frp.tar.gz &amp;&amp; \\ mv frp_[版本]_linux_amd64&#x2F;frpc &#x2F;usr&#x2F;bin&#x2F;frpc &amp;&amp; \\ rm -rf frp_[版本]_linux_amd64 &amp;&amp; \\ rm &#x2F;frp.tar.gz # 将frpc.ini文件复制到容器中 COPY frpc.ini &#x2F;etc&#x2F;frpc.ini # 运行frp客户端 CMD [&quot;frpc&quot;, &quot;-c&quot;, &quot;&#x2F;etc&#x2F;frpc.ini&quot;] 构建并运行Docker容器： docker build -t frp-client . docker run -d --network internal-network frp-client 步骤3：运行frp服务器在可以公网访问的机器上运行frp服务器： .&#x2F;frps -c frps.ini 步骤4：访问内网服务现在，可以通过访问frp服务器上的相应端口来访问内网服务。例如，如果将SSH端口映射到了6000，那么通过连接到frp服务器的6000端口即可访问内网Docker容器的SSH服务。 注意： 确保下载的frp版本与操作系统和架构相匹配。 在配置文件中，替换 [版本] 为下载的frp版本号。 确保了解安全风险，并在必要时进行适当的安全配置。 通过使用 frp，可以更容易地在本地机器上模拟内网穿透的实验环境，同时也能在实际应用中实现内网服务的公网访问。 frp配置frpc（Fast Reverse Proxy Client）是 frp 套件中的客户端组件，用于在内网环境中运行并连接到 frp 服务器 (frps)。frpc 的配置文件 (frpc.ini) 是用于定义如何将内网服务通过 frp 服务器暴露到外网的关键文件。以下是 frpc.ini 配置文件的详细介绍： 基本结构frpc.ini 文件分为两个主要部分：全局配置和代理配置。 全局配置：这部分位于文件的顶部，定义了客户端连接到服务器的基本设置，如服务器地址、端口等。 代理配置：这部分定义了具体的代理服务，包括代理类型、本地服务地址、映射到外网的端口等。 全局配置全局配置定义了 frpc 如何连接到 frps。下面是全局配置的一些常见选项： server_addr: frps 的地址，可以是 IP 地址或域名。 server_port: frps 监听的端口，默认为 7000。 token: 连接认证的令牌，如果 frps 设置了令牌认证，这里需要填写对应的令牌。 log_file: 日志文件的存储路径。 log_level: 日志级别，如 info, warn, error。 log_max_days: 日志文件保留的最大天数。 代理配置代理配置定义了内网服务如何通过 frps 暴露到外网。每个代理服务都有自己的配置段，可以有多个代理配置。以下是一些常见的代理类型及其配置： TCP 代理用于普通 TCP 服务，如 SSH、HTTP 服务等。 [ssh] type &#x3D; tcp local_ip &#x3D; 127.0.0.1 local_port &#x3D; 22 remote_port &#x3D; 6000 type: 设置为 tcp。 local_ip: 本地服务的 IP 地址，通常是 127.0.0.1 或者内网 IP。 local_port: 本地服务的端口。 remote_port: 在 frps 上映射的端口。 HTTP&#x2F;HTTPS 代理用于 HTTP&#x2F;HTTPS 服务。 [web] type &#x3D; http local_port &#x3D; 80 custom_domains &#x3D; www.example.com type: 设置为 http 或 https。 local_port: 本地 HTTP&#x2F;HTTPS 服务的端口。 custom_domains: 自定义域名，客户端通过此域名访问服务。 UDP 代理用于 UDP 流量的代理。 [dns] type &#x3D; udp local_ip &#x3D; 127.0.0.1 local_port &#x3D; 53 remote_port &#x3D; 6000 type: 设置为 udp。 local_ip 和 local_port: 同 TCP 代理。 remote_port: 在 frps 上映射的端口。 高级配置frpc 还支持一些高级配置，如连接加密、压缩、健康检查等。这些配置项可以进一步提升连接的安全性和效率。 配置示例以下是一个包含多个代理服务的 frpc.ini 示例： server_addr &#x3D; x.x.x.x server_port &#x3D; 7000 token &#x3D; your_token [ssh] type &#x3D; tcp local_ip &#x3D; 127.0.0.1 local_port &#x3D; 22 remote_port &#x3D; 6000 [web] type &#x3D; http local_port &#x3D; 80 custom_domains &#x3D; www.example.com [dns] type &#x3D; udp local_ip &#x3D; 127.0.0.1 local_port &#x3D; 53 remote_port &#x3D; 6000 这个配置文件设置了三个代理：SSH、HTTP 网站和 DNS 服务。 注意事项 确保 frpc 的配置与 frps 端的配置相匹配。 保护好配置文件，特别是包含令牌或其他敏感信息的部分。 在生产环境中使用 frp 时，请确保遵循最佳的安全实践。 frp 是一个强大的内网穿透工具，正确配置后可以非常高效地暴露内网服务。通过上述信息，应该能够设置和运行 frpc 以实现内网穿透。 proxy代理穿透要在同一局域网中的其他用户通过 Proxifier 使用 frp 内网穿透的跳板机进行访问，需要按照以下步骤进行配置： 步骤1：配置frp内网穿透首先确保已正确设置并运行了 frp 内网穿透： frp服务器（frps）：在跳板机（可以访问公网的机器）上运行。 frp客户端（frpc）：在需要穿透的内网机器上运行。 步骤2：在跳板机上设置代理服务器在跳板机上设置一个代理服务器，这样局域网内的其他用户就可以通过这个代理服务器访问内网环境。可以使用如 Squid、Shadowsocks 等软件来设置代理服务器。 步骤3：配置Proxifier其他局域网用户需要在他们的机器上安装 Proxifier。然后按照以下步骤配置 Proxifier： 打开Proxifier：安装并启动 Proxifier。 添加代理服务器： 在 Proxifier 中选择 “Proxies”。 点击 “Add” 来添加一个新的代理。 输入跳板机的 IP 地址和在步骤2中设置的代理服务器端口。 选择代理服务器类型（取决于设置的代理类型，例如 HTTP、SOCKS5 等）。 点击 “OK” 保存设置。 配置规则： 在 “Rules” 中，可以配置特定的流量规则。例如，可以设置所有流量都通过代理服务器，或者只有特定的应用程序或目的地地址使用代理。 添加新规则，设置要通过代理的目标地址或应用程序。 确保规则是激活的。 应用和保存配置：配置完规则后，确保保存并应用所有设置。 注意事项 确保跳板机的代理服务器正确配置，并且可以被局域网内的其他用户访问。 需要在局域网内的每台需要访问内网服务的机器上配置 Proxifier。 在设置 Proxifier 规则时，确保正确指定要穿透访问的内网地址或服务。 考虑安全因素，确保代理服务器仅对授权的用户开放，以防止未授权访问。 通过以上步骤，同一局域网中的用户就可以使用 Proxifier 通过跳板机访问内网环境了。 如果正在使用 frp（Fast Reverse Proxy）进行内网穿透，并且想要使用 Proxifier 从而使得同一局域网的其他用户也能通过跳板机访问内网环境，代理服务器的类型选择将直接取决于在 frp 客户端（frpc）的配置。 在 frp 中，可以配置不同类型的代理，包括 TCP、UDP、HTTP 和 HTTPS。具体的类型选择依赖于： 想暴露的服务类型：例如，如果想通过 frp 暴露一个内网的Web服务，可能会在 frpc.ini 中配置一个 HTTP 或 HTTPS 类型的代理。 frpc配置：在 frpc.ini 文件中，会根据需要访问的内网服务设置不同的代理类型。例如： 对于TCP服务（如SSH），会使用TCP代理。 对于HTTP&#x2F;HTTPS服务，会使用HTTP或HTTPS代理。 端口转发：frp 允许将内网服务的端口映射到 frp 服务器上的端口。这意味着，可以将内网的HTTP服务映射到一个特定的端口，并通过这个端口使用HTTP代理访问服务。 综上所述，如果使用 frp 进行内网穿透，需要首先查看 frpc.ini 的配置，确定已经设置了哪种类型的代理（TCP、HTTP等），然后在 Proxifier 中选择相应的代理类型进行配置。例如，如果在 frpc.ini 中设置了一个HTTP代理来暴露内网的Web服务，那么应该在 Proxifier 中选择HTTP代理类型。","link":"/2023/12/28/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B0%8F%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"web","slug":"web","link":"/tags/web/"}],"categories":[]}